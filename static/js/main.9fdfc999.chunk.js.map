{"version":3,"sources":["components/FeedbackCounter/FeedbackCounter.js","components/Statistics/Statisticks.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackCounter/FeedbackCounter.module.css"],"names":["FeedbackCounter","options","onLeaveFeedback","good","neutral","bad","className","style","FeedbackCounter__controls","btn","name","type","onClick","Statistics","total","positivePercentage","list","text","Section","title","children","Notification","message","App","state","handleBtnClick","event","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","Number","toFixed","React","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qRA8CeA,EA1CS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACxBC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,QAASC,EAAQJ,EAARI,IAEnB,OAEQ,sBAAKC,UAAWC,IAAMC,0BAAtB,UACI,wBACIF,UAAWC,IAAME,IACjBC,KAAK,OACLC,KAAK,SACLC,QAASV,EACT,aAAYC,EALhB,kBAQA,wBACIG,UAAWC,IAAME,IACjBC,KAAK,UACLC,KAAK,SACLC,QAASV,EACT,aAAYE,EALhB,qBAQA,wBACIE,UAAWC,IAAME,IACjBC,KAAK,MACLC,KAAK,SACLC,QAASV,EACT,aAAYG,EALhB,qB,gBCFLQ,EApBI,SAAC,GAAD,IAAGV,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKS,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,mCACI,sBAAKT,UAAWC,IAAMS,KAAtB,UACI,oBAAGV,UAAWC,IAAMU,KAApB,mBAAiCd,KACjC,oBAAGG,UAAWC,IAAMU,KAApB,sBAAoCb,KACpC,oBAAGE,UAAWC,IAAMU,KAApB,kBAAgCZ,KAChC,oBAAGC,UAAWC,IAAMU,KAApB,oBAAkCH,KAClC,oBAAGR,UAAWC,IAAMU,KAApB,iCAAgDF,EAAhD,a,gBCKGG,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,qCACA,oBAAId,UAAWC,IAAMY,MAArB,SAA6BA,IACxBC,M,iBCKMC,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,oBAAIhB,UAAWC,IAAMY,MAArB,SAA6BG,KCsDlBC,E,4MAlDXC,MAAQ,CACJrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGVoB,eAAiB,SAAAC,GACZ,IAAQhB,EAASgB,EAAMC,OAAfjB,KACR,EAAKkB,UAAS,SAAAC,GAAS,sBAClBnB,EAAOmB,EAAUnB,GAAQ,O,EAIlCoB,mBAAqB,WACjB,MAA+B,EAAKN,MACpC,OADA,EAAQrB,KAAR,EAAcC,QAAd,EAAuBC,K,EAG3B0B,gCAAkC,WAE9B,OADiB,EAAKP,MAAdrB,KACQ,EAAK2B,qBAAwB,K,4CAGjD,WACI,MAA+BE,KAAKR,MAA5BrB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBU,EAAqBkB,OAAOD,KAAKD,kCAAkCG,QAAQ,IACjF,OACI,mCACI,eAAC,EAAD,CAASf,MAAM,wBAAf,UAEI,cAAC,EAAD,CACIlB,QAAS+B,KAAKR,MACdtB,gBAAiB8B,KAAKP,iBAGzBO,KAAKF,qBAAuB,EAErB,cAAC,EAAD,CAAcR,QAAQ,sBAEtB,cAAC,EAAD,CACInB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLS,MAAOkB,KAAKF,qBACZf,mBAAoBA,a,GA5ClCoB,IAAMC,W,MCAxBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U,sCCX5BC,EAAOC,QAAU,CAAC,0BAA4B,mDAAmD,IAAM,+B","file":"static/js/main.9fdfc999.chunk.js","sourcesContent":["import React from 'react'\r\nimport style from './FeedbackCounter.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackCounter = ({ options, onLeaveFeedback }) => {\r\n    const { good, neutral, bad } = options;\r\n    \r\n        return (\r\n                \r\n                <div className={style.FeedbackCounter__controls}>\r\n                    <button\r\n                        className={style.btn}\r\n                        name=\"good\"\r\n                        type=\"button\"\r\n                        onClick={onLeaveFeedback}\r\n                        data-value={good}\r\n                    >Good</button>\r\n                \r\n                    <button\r\n                        className={style.btn}\r\n                        name=\"neutral\"\r\n                        type=\"button\"\r\n                        onClick={onLeaveFeedback}\r\n                        data-value={neutral}\r\n                    >Neutral</button>\r\n                \r\n                    <button\r\n                        className={style.btn}\r\n                        name=\"bad\"\r\n                        type=\"button\"\r\n                        onClick={onLeaveFeedback}\r\n                        data-value={bad}\r\n                    >Bad</button>\r\n                </div>\r\n        )\r\n}\r\n\r\nFeedbackCounter.propTypes = {\r\n    options: PropTypes.shape({\r\n        good: PropTypes.number.isRequired,\r\n        neutral: PropTypes.number.isRequired,\r\n        bad: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackCounter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    <>\r\n        <div className={style.list}>\r\n            <p className={style.text}>Good: {good}</p>\r\n            <p className={style.text}>Neutral: {neutral}</p>\r\n            <p className={style.text}>Bad: {bad}</p>\r\n            <p className={style.text}>Total: {total}</p>\r\n            <p className={style.text}>PositivePercentage: { positivePercentage}%</p>\r\n        </div>\r\n    </>\r\n)\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Section.module.css'\r\n\r\nconst Section = ({ title, children }) => (\r\n    <>\r\n    <h2 className={style.title}>{title}</h2>\r\n        {children}\r\n        </>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n    <h2 className={style.title}>{message}</h2>\r\n);\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","\r\nimport React from 'react';\r\nimport FeedbackCounter from './components/FeedbackCounter';\r\nimport Statistics from './components/Statistics';\r\nimport Section from './components/Section'\r\nimport Notification from './components/Notification'\r\n// import Controls  from './components/Counter';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0\r\n    }    \r\n   \r\n   handleBtnClick = event => {\r\n        const { name } = event.target;\r\n        this.setState(prevState => ({\r\n            [name]: prevState[name] + 1,\r\n        }));\r\n    };\r\n    \r\n    countTotalFeedback = () => {\r\n        const { good, neutral, bad } = this.state;\r\n        return (good + neutral + bad);\r\n    }\r\n    countPositiveFeedbackPercentage = () => {\r\n        const { good } = this.state;\r\n        return ((good / this.countTotalFeedback()) * 100);\r\n    }\r\n\r\n    render() {\r\n        const { good, neutral, bad } = this.state;\r\n        const positivePercentage = Number(this.countPositiveFeedbackPercentage().toFixed(0)); \r\n        return (\r\n            <>\r\n                <Section title=\"Please leave feedback\">\r\n                    \r\n                    <FeedbackCounter\r\n                        options={this.state}\r\n                        onLeaveFeedback={this.handleBtnClick}\r\n                    />\r\n        \r\n                    {this.countTotalFeedback() < 1\r\n                        ? (\r\n                            <Notification message=\"No feedback given\" />)\r\n                        : (\r\n                            <Statistics\r\n                                good={good}\r\n                                neutral={neutral}\r\n                                bad={bad}\r\n                                total={this.countTotalFeedback()}\r\n                                positivePercentage={positivePercentage} />)\r\n                    }\r\n                    </Section>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default App;\r\n    ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import User from './user.json';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\n// ReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FeedbackCounter__controls\":\"FeedbackCounter_FeedbackCounter__controls__15CGn\",\"btn\":\"FeedbackCounter_btn__2KVs-\"};"],"sourceRoot":""}